version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vgov-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-vgov}
      POSTGRES_USER: ${DB_USERNAME:-vgov_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-vgov_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/main/resources/sql:/docker-entrypoint-initdb.d
    networks:
      - vgov-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-vgov_user} -d ${DB_NAME:-vgov}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: vgov-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    networks:
      - vgov-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  # MinIO Client to create bucket
  minio-client:
    image: minio/mc:latest
    container_name: vgov-minio-client
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - vgov-network
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 ${MINIO_ACCESS_KEY:-minioadmin} ${MINIO_SECRET_KEY:-minioadmin};
      mc mb myminio/${MINIO_BUCKET_NAME:-vgov-files} --ignore-existing;
      mc anonymous set public myminio/${MINIO_BUCKET_NAME:-vgov-files};
      exit 0;
      "

  # V-GOV Backend Application
  vgov-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vgov-backend
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_USERNAME: ${DB_USERNAME:-vgov_user}
      DB_PASSWORD: ${DB_PASSWORD:-vgov_password}
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-vgov}
      
      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET:-your-very-long-secret-key-for-jwt-token-signing-in-development-environment}
      
      # MinIO Configuration
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY:-minioadmin}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME:-vgov-files}
      MINIO_SECURE: false
      
      # File Upload Configuration
      FILE_BASE_URL: http://localhost:${SERVER_PORT:-8080}/api/files
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10MB}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE:-10MB}
      
      # Server Configuration
      SERVER_PORT: 8080
      
      # Logging Configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      - app_uploads:/app/uploads
    networks:
      - vgov-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  # Development Tools - Adminer (Database Management)
  adminer:
    image: adminer:latest
    container_name: vgov-adminer
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    networks:
      - vgov-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  app_uploads:
    driver: local

networks:
  vgov-network:
    driver: bridge
